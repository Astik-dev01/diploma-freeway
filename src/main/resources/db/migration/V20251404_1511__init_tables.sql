CREATE TABLE faculties
(
    id      BIGSERIAL PRIMARY KEY,
    name    VARCHAR(255) NOT NULL UNIQUE,
    deleted BOOLEAN DEFAULT FALSE
);
CREATE TABLE email_verification_tokens
(
    id         BIGSERIAL PRIMARY KEY,
    email      VARCHAR(255)          NOT NULL,
    code       VARCHAR(255)          NOT NULL,
    created_at TIMESTAMP             NOT NULL,
    expires_at TIMESTAMP             NOT NULL,
    used       BOOLEAN DEFAULT FALSE NOT NULL
);
CREATE TABLE chat_message
(
    id           BIGSERIAL PRIMARY KEY,
    sender_id    BIGINT      NOT NULL,
    recipient_id BIGINT      NOT NULL,
    content      TEXT        NOT NULL,
    timestamp    TIMESTAMP   NOT NULL,
    status       VARCHAR(20) NOT NULL CHECK (status IN ('SENT', 'DELIVERED', 'READ'))
);
CREATE TABLE IF NOT EXISTS sys_roles
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    alias           VARCHAR(255)                        NOT NULL UNIQUE,
    name_ru         VARCHAR(255)                        NOT NULL,
    name_ky         VARCHAR(255)                        NOT NULL,
    password_length INTEGER   DEFAULT 10                NOT NULL,
    deleted         BOOLEAN   DEFAULT FALSE,
    edited_time     TIMESTAMP                           NULL,
    created_time    TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);
CREATE TABLE IF NOT EXISTS sys_users
(
    id                          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    second_name                 VARCHAR(255)                           NOT NULL,
    name                        VARCHAR(255)                           NOT NULL,
    gender                      VARCHAR(50),
    password                    VARCHAR(255)                           NOT NULL,
    birthdate                   TIMESTAMP(6),
    last_password               VARCHAR(255),
    second_last_password        VARCHAR(255),
    third_last_password         VARCHAR(255),
    failed_login_attempts       INTEGER      DEFAULT 0,
    last_login                  TIMESTAMP(6),
    password_change_next_logon  BOOLEAN      DEFAULT TRUE,
    password_last_change_time   TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP,
    temporary_access_until_time TIMESTAMP(6),
    is_banned                   BOOLEAN      DEFAULT FALSE             NOT NULL,
    email_verified              BOOLEAN      DEFAULT FALSE             NOT NULL,
    email                       VARCHAR(255)                           NOT NULL,
    phone_number                VARCHAR(255),
    phone_number_verified       BOOLEAN      DEFAULT FALSE,
    deleted                     BOOLEAN      DEFAULT FALSE,
    edited_time                 TIMESTAMP                              NULL,
    created_time                TIMESTAMP    DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT unique_sys_user_phone UNIQUE (phone_number)
);
CREATE TABLE student_details
(
    id         BIGSERIAL PRIMARY KEY,

    user_id    BIGINT       NOT NULL UNIQUE,
    CONSTRAINT fk_student_user FOREIGN KEY (user_id) REFERENCES sys_users (id) ON DELETE CASCADE,

    student_id VARCHAR(255) NOT NULL UNIQUE,

    faculty_id BIGINT       NOT NULL,
    CONSTRAINT fk_student_faculty FOREIGN KEY (faculty_id) REFERENCES faculties (id),

    advisor_id BIGINT       NOT NULL,
    CONSTRAINT fk_student_advisor FOREIGN KEY (advisor_id) REFERENCES sys_users (id)
);
CREATE TABLE free_visit_applications
(
    id           BIGSERIAL PRIMARY KEY,
    student_id   BIGINT                              NOT NULL,
    comment      TEXT,
    status       VARCHAR(50)                         NOT NULL,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    edited_time  TIMESTAMP,

    CONSTRAINT fk_free_visit_application_student
        FOREIGN KEY (student_id)
            REFERENCES student_details (id)
            ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS free_visit_approvals
(
    id             BIGSERIAL PRIMARY KEY,
    application_id BIGINT                              NOT NULL,
    teacher_id     BIGINT                              NOT NULL,
    status         VARCHAR(50)                         NOT NULL,
    comment        TEXT,
    created_time   TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    edited_time    TIMESTAMP,

    CONSTRAINT fk_approval_application FOREIGN KEY (application_id)
        REFERENCES free_visit_applications (id) ON DELETE CASCADE,

    CONSTRAINT fk_approval_teacher FOREIGN KEY (teacher_id)
        REFERENCES sys_users (id) ON DELETE CASCADE
);
CREATE TABLE meeting
(
    id           BIGSERIAL PRIMARY KEY,

    student_id   BIGINT                              NOT NULL REFERENCES sys_users (id) ON DELETE SET NULL,
    teacher_id   BIGINT                              NOT NULL REFERENCES sys_users (id) ON DELETE SET NULL,
    created_by   BIGINT                              NOT NULL REFERENCES sys_users (id) ON DELETE SET NULL,

    comment      TEXT,
    topic        TEXT,

    start_time   TIMESTAMP                           NOT NULL,
    end_time     TIMESTAMP                           NOT NULL,

    status       VARCHAR(20)                         NOT NULL,

    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);
CREATE TABLE free_visit_attachments
(
    id             BIGSERIAL PRIMARY KEY,
    application_id BIGINT                              NOT NULL UNIQUE,
    file_path      TEXT                                NOT NULL,
    content_type   VARCHAR(255),
    created_time   TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,

    CONSTRAINT fk_free_visit_attachment_application
        FOREIGN KEY (application_id)
            REFERENCES free_visit_applications (id)
            ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS password_reset_token
(
    id          BIGSERIAL PRIMARY KEY,
    token       VARCHAR(255) NOT NULL,
    user_id     BIGINT       NOT NULL,
    expiry_date TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP + INTERVAL '1 hour',
    CONSTRAINT fk_password_reset_token_user FOREIGN KEY (user_id) REFERENCES sys_users (id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS sys_user_roles
(
    user_id BIGINT NOT NULL,
    role_id BIGINT NOT NULL,
    PRIMARY KEY (user_id, role_id),
    CONSTRAINT fk_sys_user_roles_user_id FOREIGN KEY (user_id) REFERENCES sys_users (id),
    CONSTRAINT fk_sys_user_roles_role_id FOREIGN KEY (role_id) REFERENCES sys_roles (id)
);
CREATE TABLE IF NOT EXISTS account_activation
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         BIGINT                              NOT NULL REFERENCES sys_users (id) ON DELETE CASCADE,
    activation_code UUID                                NOT NULL UNIQUE,
    expires_at      TIMESTAMP                           NOT NULL,
    activated       BOOLEAN   DEFAULT FALSE,
    created_time    TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    edited_time     TIMESTAMP                           NULL
);
CREATE TABLE IF NOT EXISTS action_logs
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id          BIGINT                              NOT NULL,
    object_type      VARCHAR(50)                         NOT NULL,
    http_method_type VARCHAR(10)                         NOT NULL,
    details          TEXT,
    remote_ip        VARCHAR(30),
    created_time     TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_action_logs_user FOREIGN KEY (user_id) REFERENCES sys_users (id)
);
CREATE TABLE IF NOT EXISTS sys_logs_authorization
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id      BIGINT                              NOT NULL,
    remote_ip    VARCHAR(30),
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_sys_logs_authorization_user_id FOREIGN KEY (user_id) REFERENCES sys_users (id)
);
CREATE TABLE IF NOT EXISTS sys_logs_request
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    class_name   VARCHAR(255)                        NOT NULL,
    method_name  VARCHAR(255)                        NOT NULL,
    details      TEXT,
    status       VARCHAR(255)                        NOT NULL,
    user_id      BIGINT,
    remote_ip    VARCHAR(30),
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_sys_logs_request_user_id FOREIGN KEY (user_id) REFERENCES sys_users (id)
);
CREATE TABLE IF NOT EXISTS error_message
(
    id          VARCHAR PRIMARY KEY,
    field       VARCHAR NOT NULL,
    message_ru  VARCHAR NOT NULL,
    message_kg  VARCHAR NOT NULL,
    message_eng VARCHAR NOT NULL
);
